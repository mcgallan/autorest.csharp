// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;

namespace Routes.Samples
{
    public partial class Samples_PathParameters
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_TemplateOnly_ShortVersion()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.TemplateOnly("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_TemplateOnly_ShortVersion_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.TemplateOnlyAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_TemplateOnly_AllParameters()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.TemplateOnly("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_TemplateOnly_AllParameters_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.TemplateOnlyAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_Explicit_ShortVersion()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.Explicit("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_Explicit_ShortVersion_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.ExplicitAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_Explicit_AllParameters()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.Explicit("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_Explicit_AllParameters_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.ExplicitAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_AnnotationOnly_ShortVersion()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.AnnotationOnly("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_AnnotationOnly_ShortVersion_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.AnnotationOnlyAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PathParameters_AnnotationOnly_AllParameters()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = client.AnnotationOnly("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PathParameters_AnnotationOnly_AllParameters_Async()
        {
            PathParameters client = new RoutesClient().GetPathParametersClient();

            Response response = await client.AnnotationOnlyAsync("<param>");

            Console.WriteLine(response.Status);
        }
    }
}
