// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;

namespace Routes.Samples
{
    public partial class Samples_PathParametersReservedExpansion
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReservedExpansion_Template_ShortVersion()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = client.Template("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReservedExpansion_Template_ShortVersion_Async()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = await client.TemplateAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReservedExpansion_Template_AllParameters()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = client.Template("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReservedExpansion_Template_AllParameters_Async()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = await client.TemplateAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReservedExpansion_Annotation_ShortVersion()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = client.Annotation("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReservedExpansion_Annotation_ShortVersion_Async()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = await client.AnnotationAsync("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReservedExpansion_Annotation_AllParameters()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = client.Annotation("<param>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReservedExpansion_Annotation_AllParameters_Async()
        {
            PathParametersReservedExpansion client = new RoutesClient().GetPathParametersClient().GetPathParametersReservedExpansionClient();

            Response response = await client.AnnotationAsync("<param>");

            Console.WriteLine(response.Status);
        }
    }
}
