// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure.Core.Pipeline;

namespace Routes
{
    // Data plane generated sub-client.
    /// <summary> The QueryParametersQueryExpansion sub-client. </summary>
    public partial class QueryParametersQueryExpansion
    {
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of QueryParametersQueryExpansion for mocking. </summary>
        protected QueryParametersQueryExpansion()
        {
        }

        /// <summary> Initializes a new instance of QueryParametersQueryExpansion. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> Service host. </param>
        internal QueryParametersQueryExpansion(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint)
        {
            ClientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
            _endpoint = endpoint;
        }

        private QueryParametersQueryExpansionStandard _cachedQueryParametersQueryExpansionStandard;
        private QueryParametersQueryExpansionExplode _cachedQueryParametersQueryExpansionExplode;

        /// <summary> Initializes a new instance of QueryParametersQueryExpansionStandard. </summary>
        public virtual QueryParametersQueryExpansionStandard GetQueryParametersQueryExpansionStandardClient()
        {
            return Volatile.Read(ref _cachedQueryParametersQueryExpansionStandard) ?? Interlocked.CompareExchange(ref _cachedQueryParametersQueryExpansionStandard, new QueryParametersQueryExpansionStandard(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedQueryParametersQueryExpansionStandard;
        }

        /// <summary> Initializes a new instance of QueryParametersQueryExpansionExplode. </summary>
        public virtual QueryParametersQueryExpansionExplode GetQueryParametersQueryExpansionExplodeClient()
        {
            return Volatile.Read(ref _cachedQueryParametersQueryExpansionExplode) ?? Interlocked.CompareExchange(ref _cachedQueryParametersQueryExpansionExplode, new QueryParametersQueryExpansionExplode(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedQueryParametersQueryExpansionExplode;
        }
    }
}
