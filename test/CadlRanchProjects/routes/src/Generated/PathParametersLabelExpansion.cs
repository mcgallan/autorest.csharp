// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure.Core.Pipeline;

namespace Routes
{
    // Data plane generated sub-client.
    /// <summary> The PathParametersLabelExpansion sub-client. </summary>
    public partial class PathParametersLabelExpansion
    {
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of PathParametersLabelExpansion for mocking. </summary>
        protected PathParametersLabelExpansion()
        {
        }

        /// <summary> Initializes a new instance of PathParametersLabelExpansion. </summary>
        /// <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
        /// <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
        /// <param name="endpoint"> Service host. </param>
        internal PathParametersLabelExpansion(ClientDiagnostics clientDiagnostics, HttpPipeline pipeline, Uri endpoint)
        {
            ClientDiagnostics = clientDiagnostics;
            _pipeline = pipeline;
            _endpoint = endpoint;
        }

        private PathParametersLabelExpansionStandard _cachedPathParametersLabelExpansionStandard;
        private PathParametersLabelExpansionExplode _cachedPathParametersLabelExpansionExplode;

        /// <summary> Initializes a new instance of PathParametersLabelExpansionStandard. </summary>
        public virtual PathParametersLabelExpansionStandard GetPathParametersLabelExpansionStandardClient()
        {
            return Volatile.Read(ref _cachedPathParametersLabelExpansionStandard) ?? Interlocked.CompareExchange(ref _cachedPathParametersLabelExpansionStandard, new PathParametersLabelExpansionStandard(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedPathParametersLabelExpansionStandard;
        }

        /// <summary> Initializes a new instance of PathParametersLabelExpansionExplode. </summary>
        public virtual PathParametersLabelExpansionExplode GetPathParametersLabelExpansionExplodeClient()
        {
            return Volatile.Read(ref _cachedPathParametersLabelExpansionExplode) ?? Interlocked.CompareExchange(ref _cachedPathParametersLabelExpansionExplode, new PathParametersLabelExpansionExplode(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedPathParametersLabelExpansionExplode;
        }
    }
}
