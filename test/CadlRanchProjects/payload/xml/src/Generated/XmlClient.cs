// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Payload.Xml
{
    // Data plane generated client.
    /// <summary> Sends and receives bodies in XML format. </summary>
    public partial class XmlClient
    {
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of XmlClient. </summary>
        public XmlClient() : this(new Uri("http://localhost:3000"), new XmlClientOptions())
        {
        }

        /// <summary> Initializes a new instance of XmlClient. </summary>
        /// <param name="endpoint"> Service host. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public XmlClient(Uri endpoint, XmlClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new XmlClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), Array.Empty<HttpPipelinePolicy>(), new ResponseClassifier());
            _endpoint = endpoint;
        }

        private SimpleModelValue _cachedSimpleModelValue;
        private ModelWithSimpleArraysValue _cachedModelWithSimpleArraysValue;
        private ModelWithArrayOfModelValue _cachedModelWithArrayOfModelValue;
        private ModelWithOptionalFieldValue _cachedModelWithOptionalFieldValue;
        private ModelWithAttributesValue _cachedModelWithAttributesValue;
        private ModelWithUnwrappedArrayValue _cachedModelWithUnwrappedArrayValue;
        private ModelWithRenamedArraysValue _cachedModelWithRenamedArraysValue;
        private ModelWithRenamedFieldsValue _cachedModelWithRenamedFieldsValue;
        private ModelWithEmptyArrayValue _cachedModelWithEmptyArrayValue;
        private ModelWithTextValue _cachedModelWithTextValue;
        private ModelWithDictionaryValue _cachedModelWithDictionaryValue;
        private ModelWithEncodedNamesValue _cachedModelWithEncodedNamesValue;

        /// <summary> Initializes a new instance of SimpleModelValue. </summary>
        public virtual SimpleModelValue GetSimpleModelValueClient()
        {
            return Volatile.Read(ref _cachedSimpleModelValue) ?? Interlocked.CompareExchange(ref _cachedSimpleModelValue, new SimpleModelValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedSimpleModelValue;
        }

        /// <summary> Initializes a new instance of ModelWithSimpleArraysValue. </summary>
        public virtual ModelWithSimpleArraysValue GetModelWithSimpleArraysValueClient()
        {
            return Volatile.Read(ref _cachedModelWithSimpleArraysValue) ?? Interlocked.CompareExchange(ref _cachedModelWithSimpleArraysValue, new ModelWithSimpleArraysValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithSimpleArraysValue;
        }

        /// <summary> Initializes a new instance of ModelWithArrayOfModelValue. </summary>
        public virtual ModelWithArrayOfModelValue GetModelWithArrayOfModelValueClient()
        {
            return Volatile.Read(ref _cachedModelWithArrayOfModelValue) ?? Interlocked.CompareExchange(ref _cachedModelWithArrayOfModelValue, new ModelWithArrayOfModelValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithArrayOfModelValue;
        }

        /// <summary> Initializes a new instance of ModelWithOptionalFieldValue. </summary>
        public virtual ModelWithOptionalFieldValue GetModelWithOptionalFieldValueClient()
        {
            return Volatile.Read(ref _cachedModelWithOptionalFieldValue) ?? Interlocked.CompareExchange(ref _cachedModelWithOptionalFieldValue, new ModelWithOptionalFieldValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithOptionalFieldValue;
        }

        /// <summary> Initializes a new instance of ModelWithAttributesValue. </summary>
        public virtual ModelWithAttributesValue GetModelWithAttributesValueClient()
        {
            return Volatile.Read(ref _cachedModelWithAttributesValue) ?? Interlocked.CompareExchange(ref _cachedModelWithAttributesValue, new ModelWithAttributesValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithAttributesValue;
        }

        /// <summary> Initializes a new instance of ModelWithUnwrappedArrayValue. </summary>
        public virtual ModelWithUnwrappedArrayValue GetModelWithUnwrappedArrayValueClient()
        {
            return Volatile.Read(ref _cachedModelWithUnwrappedArrayValue) ?? Interlocked.CompareExchange(ref _cachedModelWithUnwrappedArrayValue, new ModelWithUnwrappedArrayValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithUnwrappedArrayValue;
        }

        /// <summary> Initializes a new instance of ModelWithRenamedArraysValue. </summary>
        public virtual ModelWithRenamedArraysValue GetModelWithRenamedArraysValueClient()
        {
            return Volatile.Read(ref _cachedModelWithRenamedArraysValue) ?? Interlocked.CompareExchange(ref _cachedModelWithRenamedArraysValue, new ModelWithRenamedArraysValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithRenamedArraysValue;
        }

        /// <summary> Initializes a new instance of ModelWithRenamedFieldsValue. </summary>
        public virtual ModelWithRenamedFieldsValue GetModelWithRenamedFieldsValueClient()
        {
            return Volatile.Read(ref _cachedModelWithRenamedFieldsValue) ?? Interlocked.CompareExchange(ref _cachedModelWithRenamedFieldsValue, new ModelWithRenamedFieldsValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithRenamedFieldsValue;
        }

        /// <summary> Initializes a new instance of ModelWithEmptyArrayValue. </summary>
        public virtual ModelWithEmptyArrayValue GetModelWithEmptyArrayValueClient()
        {
            return Volatile.Read(ref _cachedModelWithEmptyArrayValue) ?? Interlocked.CompareExchange(ref _cachedModelWithEmptyArrayValue, new ModelWithEmptyArrayValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithEmptyArrayValue;
        }

        /// <summary> Initializes a new instance of ModelWithTextValue. </summary>
        public virtual ModelWithTextValue GetModelWithTextValueClient()
        {
            return Volatile.Read(ref _cachedModelWithTextValue) ?? Interlocked.CompareExchange(ref _cachedModelWithTextValue, new ModelWithTextValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithTextValue;
        }

        /// <summary> Initializes a new instance of ModelWithDictionaryValue. </summary>
        public virtual ModelWithDictionaryValue GetModelWithDictionaryValueClient()
        {
            return Volatile.Read(ref _cachedModelWithDictionaryValue) ?? Interlocked.CompareExchange(ref _cachedModelWithDictionaryValue, new ModelWithDictionaryValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithDictionaryValue;
        }

        /// <summary> Initializes a new instance of ModelWithEncodedNamesValue. </summary>
        public virtual ModelWithEncodedNamesValue GetModelWithEncodedNamesValueClient()
        {
            return Volatile.Read(ref _cachedModelWithEncodedNamesValue) ?? Interlocked.CompareExchange(ref _cachedModelWithEncodedNamesValue, new ModelWithEncodedNamesValue(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedModelWithEncodedNamesValue;
        }
    }
}
