// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.Xml.Models;

namespace Payload.Xml.Samples
{
    public partial class Samples_ModelWithEmptyArrayValue
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_ShortVersion()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response response = client.GetModelWithEmptyArrayValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("age").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_ShortVersion_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response response = await client.GetModelWithEmptyArrayValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("age").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_ShortVersion_Convenience()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response<ModelWithEmptyArray> response = client.GetModelWithEmptyArrayValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_ShortVersion_Convenience_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response<ModelWithEmptyArray> response = await client.GetModelWithEmptyArrayValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_AllParameters()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response response = client.GetModelWithEmptyArrayValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("age").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_AllParameters_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response response = await client.GetModelWithEmptyArrayValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("items")[0].GetProperty("age").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_AllParameters_Convenience()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response<ModelWithEmptyArray> response = client.GetModelWithEmptyArrayValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_GetModelWithEmptyArrayValue_AllParameters_Convenience_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            Response<ModelWithEmptyArray> response = await client.GetModelWithEmptyArrayValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_Put_ShortVersion()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            using RequestContent content = RequestContent.Create(new
            {
                items = new object[]
            {
new
{
name = "<name>",
age = 1234,
}
            },
            });
            Response response = client.Put(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_Put_ShortVersion_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            using RequestContent content = RequestContent.Create(new
            {
                items = new object[]
            {
new
{
name = "<name>",
age = 1234,
}
            },
            });
            Response response = await client.PutAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_Put_ShortVersion_Convenience()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            ModelWithEmptyArray input = new ModelWithEmptyArray(new SimpleModel[]
            {
new SimpleModel("<name>", 1234)
            });
            Response response = client.Put(input);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_Put_ShortVersion_Convenience_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            ModelWithEmptyArray input = new ModelWithEmptyArray(new SimpleModel[]
            {
new SimpleModel("<name>", 1234)
            });
            Response response = await client.PutAsync(input);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_Put_AllParameters()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            using RequestContent content = RequestContent.Create(new
            {
                items = new object[]
            {
new
{
name = "<name>",
age = 1234,
}
            },
            });
            Response response = client.Put(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_Put_AllParameters_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            using RequestContent content = RequestContent.Create(new
            {
                items = new object[]
            {
new
{
name = "<name>",
age = 1234,
}
            },
            });
            Response response = await client.PutAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ModelWithEmptyArrayValue_Put_AllParameters_Convenience()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            ModelWithEmptyArray input = new ModelWithEmptyArray(new SimpleModel[]
            {
new SimpleModel("<name>", 1234)
            });
            Response response = client.Put(input);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ModelWithEmptyArrayValue_Put_AllParameters_Convenience_Async()
        {
            ModelWithEmptyArrayValue client = new XmlClient().GetModelWithEmptyArrayValueClient();

            ModelWithEmptyArray input = new ModelWithEmptyArray(new SimpleModel[]
            {
new SimpleModel("<name>", 1234)
            });
            Response response = await client.PutAsync(input);
        }
    }
}
